// Code generated by protoc-gen-twirp_analytics v0.0.1, DO NOT EDIT.
// source: test.proto

package proto

import "context"
import "github.com/Xe/ln"
import "gopkg.in/segmentio/analytics-go.v3"

// HelloWorldAnalytics is a middleware for HelloWorld that collects timing and error rate data for servers.
type HelloWorldAnalytics struct {
	Next HelloWorld
	client analytics.Client
}

func NewHelloWorldAnalytics(next HelloWorld, client analytics.Client) HelloWorld {
	var result HelloWorldAnalytics
	result.Next = next
	result.client = client
	return result
}

func (i HelloWorldAnalytics) Speak(ctx context.Context, input *Words) (result *Words, err error) {
	var track analytics.Track
	track.Event = "HelloWorld Speak"
	track.UserId = ln.GetFFromContext(ctx)["x_forwarded_for"].(string)
	defer func() {
		if err != nil {
			track.Event += " Error"
		}
		err = i.client.Enqueue(track)
		if err != nil {
			ln.Error(ctx, err)
		}
	}()

	result, err = i.Next.Speak(ctx, input)
	return
}

